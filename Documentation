Wordpress Plugin Development:

1.Create a WordPress Plugin from Scratch - Part 1:

Change this in wp-config-sample.php false  to true:
    define('WP_DEBUG', true);

Or, Direct copy and paste code and rename wp-config-sample.php to wp-config.php

Before creating plugin, check its name.

Now create a folder with plugin name:  "biplob45-plugin"
Now create biplob45-plugin.php file and write this code:
<?php
/**
*  @package Biplob45Plugin
*/
/*
Plugin Name: Biplob45 Plugin
Plugin URI: https://github.com/Biplob45/WordPress-Plugin-Development
Description: This is my first attempt on writing a custom plugin.
Version: 1.0.0
Author: Md.Badiuzzaman "Biplob45" Biplob
Author URI: https://github.com/Biplob45/WordPress-Plugin-Development
License: GPLv2 or later
Text Domain: biplob45-plugin
*/  

/*
This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

This program is destributed in the hope that it will be useful, but WITHOUT ANY WARRENTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.

Copyright 2005-2015 Automatic, Inc.
*/

if ( ! defined('ABSPATH')) {
	die;
}

defined( 'ABSPATH' ) or die( 'Hey, you can\t access this file, you silly human!' );

if ( ! function_exists( 'add_action' ) ) {
	echo 'Hey, you can\t access this file, you silly human!';
	exit;
}




Create a WordPress Plugin from Scratch - Part 3 - Basic PHP OOP:

class Biplob45Plugin
{
	/*
	function __construct($string) {
		echo $string;
	}
	*/

	function activate() {
		// generated a custom post type
		// flush rewrite rules
		echo 'This plugin is actice';
	}

	function deactivate() {
		// flush rewrite rules
	}

	function uninstall() {
		// delete custom post type
		// delete all the plugin data from the DB
	}
}


if ( class_exists( 'Biplob45Plugin' ) ){
//$biplob45plugin = new Biplob45Plugin('Biplob45 Plugin Initialized');
  $biplob45plugin = new Biplob45Plugin();
}

// activation

register_activation_hook( __FILE__, array( $biplob45plugin, 'activate' ) );

// deactivation

register_deactivation_hook( __FILE__, array( $biplob45plugin, 'deactivate' ) );


// uninstallation








For Security the plugin,again create a file index.php:

<?php
// Silence is golden.




Create a WordPress Plugin from Scratch - Part 4 - Custom Post Type



Create a WordPress Plugin from Scratch - Part 5 - Uninstall Hook:

create a file in biplob45-plugin folder "uninstall.php"  and added this code:

<?php 


/**
*  Trigger this file on Plugin uninstall
*
*  @package Biplob45Plugin
*/

if ( ! defined( 'WP_UNINSTALL_PLUGIN' ) ) {
	die;
}


// Clear Database stored data
// $books = get_posts( array( 'post_type' => 'book', 'numberposts' => -1 ) );

// foreach ($books as $book) {
//  	wp_delete_post( $book->ID, true );
//  } 



//OR,
// Access the database via SQL
global $wpdb;
$wpdb->query( "DELETE FROM wp_posts WHERE post_type = 'book'" );
$wpdb->query( "DELETE FROM wp_postmeta WHERE post_id NOT IN (SELECT id FROM wp_posts)" );
$wpdb->query( "DELETE FROM wp_term_relationships WHERE object_id NOT IN (SELECT id FROM wp_posts)" );





WordPress Plugin Development - Part 6 - Enqueue Admin Scripts:

Create a new folder in wp-content/plugins/biplob45-plugin:
Folder name: assets
and create this two file:
mystyle.css
myscript.js


Now add this code in biplob45-plugin.php:


function register() {
		add_action( 'admin_enqueue_scripts', array( $this, 'enqueue' ) );
	}


function enqueue() {
		// enqueue all our scripts.
        wp_enqueue_style( 'mypluginstyle', plugins_url( '/assets/mystyle.css', __FILE__ ) );
        wp_enqueue_script( 'mypluginscript', plugins_url( '/assets/myscript.js', __FILE__ ) );
	}



$biplob45plugin->register();


If you want this style to be enqueued front end of our website  not the backend  just simply replace the admin_enqueue_scripts with the wp_enqueue_scripts.



//Public:  can be accessed everywhere
//Protected: can be accessed only within the class itself or extensions of that class
//Private: can be accessed only within the class itself


WordPress Plugin Development - Part 8 - Static Methods and Multiple Files:
without creating any instance of the class diretly access the static method.


public static function register() {
		add_action( 'admin_enqueue_scripts', array( 'Biplob45Plugin', 'enqueue' ) );
		
		// If you want this style to be enqueued front end of our website  not the backend  just simply  replace the admin_enqueue_scripts with the wp_enqueue_scripts.

		//add_action( 'wp_enqueue_scripts', array( $this, 'enqueue' ) );
	}


//static function enqueue() 
	static function enqueue() {
		// enqueue all our scripts
		wp_enqueue_style( 'mypluginstyle', plugins_url( '/assets/mystyle.css', __FILE__ ) );
		wp_enqueue_script( 'mypluginscript', plugins_url( '/assets/myscript.js', __FILE__ ) );
	}


//Biplob45Plugin::register();



Inside the biplob45-plugin create a new folder "inc":
in this folder create file:
1.biplob45-plugin-activate.php
2.biplob45-plugin-deactivate.php




Now write this code in biplob45-plugin-activate.php:

<?php
/**
*  @package Biplob45Plugin
*/

class Biplob45pluginActivate
{
	public static function activate() {
		flush_rewrite_rules();
	}
}



Now write this code in biplob45-plugin-deactivate.php:

<?php
/**
*  @package Biplob45Plugin
*/

class Biplob45pluginDeactivate
{
	public static function deactivate() {
		flush_rewrite_rules();
	}
}




and,  file : biplob45-plugin.php


// activation
require_once plugin_dir_path( __FILE__ ) . 'inc/biplob45-plugin-activate.php';

//register_activation_hook( __FILE__, array( $biplob45plugin, 'activate' ) );
register_activation_hook( __FILE__, array( 'Biplob45PluginActivate' , 'activate' ) );

// deactivation
require_once plugin_dir_path( __FILE__ ) . 'inc/biplob45-plugin-deactivate.php';

//register_deactivation_hook( __FILE__, array( $biplob45plugin, 'deactivate' ) );
register_deactivation_hook( __FILE__, array( 'Biplob45PluginDeactivate', 'deactivate' ) );



Last Face of  biplob45-plugin.php:


<?php
/**
*  @package Biplob45Plugin
*/
/*
Plugin Name: Biplob45 Plugin
Plugin URI: https://github.com/Biplob45/WordPress-Plugin-Development
Description: This is my first attempt on writing a custom plugin.
Version: 1.0.0
Author: Md.Badiuzzaman "Biplob45" Biplob
Author URI: https://github.com/Biplob45/WordPress-Plugin-Development
License: GPLv2 or later
Text Domain: biplob45-plugin
*/ 

/*
This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

This program is destributed in the hope that it will be useful, but WITHOUT ANY WARRENTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.

Copyright 2005-2015 Automatic, Inc.
*/

/*
if ( ! defined('ABSPATH')) {
	die;
}
*/

defined( 'ABSPATH' ) or die( 'Hey, you can\t access this file, you silly human!' );


if ( !class_exists( 'Biplob45Plugin' ) ){

/*
if ( ! function_exists( 'add_action' ) ) {
	echo 'Hey, you can\t access this file, you silly human!';
	exit;
}
*/

class Biplob45Plugin
{
	/*
	function __construct($string) {
		echo $string;
	}
	*/
/*
	public static function register() {
		add_action( 'admin_enqueue_scripts', array( 'Biplob45Plugin', 'enqueue' ) );
		
		// If you want this style to be enqueued front end of our website  not the backend  just simply  replace the admin_enqueue_scripts with the wp_enqueue_scripts.

		//add_action( 'wp_enqueue_scripts', array( $this, 'enqueue' ) );
	}

*/
	function register() {
		add_action( 'admin_enqueue_scripts', array( $this, 'enqueue' ) );
		
		// If you want this style to be enqueued front end of our website  not the backend  just simply  replace the admin_enqueue_scripts with the wp_enqueue_scripts.

		//add_action( 'wp_enqueue_scripts', array( $this, 'enqueue' ) );
	}


/*  Remove this two method and create  two file ...
	function activate() {
		require_once plugin_dir_path( __FILE__ ) . 'inc/biplob45-plugin-activate.php';
		Biplob45PluginActivate::activate();
		// generated a custom post type
		$this->custom_post_type();
		// flush rewrite rules
		flush_rewrite_rules();
	}

	function deactivate() {
		// flush rewrite rules
		flush_rewrite_rules();
	}
*/

/*
	function uninstall() {
		// delete custom post type
		// delete all the plugin data from the DB
	}
*/


	protected function custom_post_type() {
		//register_post_type( 'book', ['public' => true, 'label' => 'Books' ] );
		add_action( 'init', array( $this, 'custom_post_type' ) );
	}


	//static function enqueue() 
	static function enqueue() {
		// enqueue all our scripts
		wp_enqueue_style( 'mypluginstyle', plugins_url( '/assets/mystyle.css', __FILE__ ) );
		wp_enqueue_script( 'mypluginscript', plugins_url( '/assets/myscript.js', __FILE__ ) );
	}




}



// if ( class_exists( 'Biplob45Plugin' ) ){
// $biplob45plugin = new Biplob45Plugin('Biplob45 Plugin Initialized');
  $biplob45plugin = new Biplob45Plugin();
  $biplob45plugin->register();

  //Biplob45Plugin::register();
//}



// activation
require_once plugin_dir_path( __FILE__ ) . 'inc/biplob45-plugin-activate.php';

//register_activation_hook( __FILE__, array( $biplob45plugin, 'activate' ) );
register_activation_hook( __FILE__, array( 'Biplob45PluginActivate' , 'activate' ) );

// deactivation
require_once plugin_dir_path( __FILE__ ) . 'inc/biplob45-plugin-deactivate.php';

//register_deactivation_hook( __FILE__, array( $biplob45plugin, 'deactivate' ) );
register_deactivation_hook( __FILE__, array( 'Biplob45PluginDeactivate', 'deactivate' ) );

/*
//uninstall
register_uninstall_hook( __FILE__, array( $biplob45plugin, 'uninstall' ) );
*/

}
